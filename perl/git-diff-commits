#!/usr/bin/env perl

#
# git-diff-commits <basebranch> <branch>
#
# DESCRIPTION
#
#     Prints the number of commits 'branch' is behind/ahead 'basebranch'
#

use warnings;
use strict;

use List::Util qw(reduce);

if (!`git rev-parse --is-inside-work-tree 2>/dev/null`)
{
    print("[ERROR] Not inside a git environment\n");
    exit 1;
}

my $argc = scalar @ARGV;

if ($argc != 2)
{
    print("[ERROR] Expected 2 argument, $argc given\n");
    exit 1;
}

my @branches = sort split(/\n/,
    `git for-each-ref --format="%(refname:short)" refs/heads`);

my $basebranch = $ARGV[0];

my $branch = $ARGV[1];

if ($basebranch ne "HEAD")
{
    if (!grep(/^$basebranch$/, @branches))
    {
        print("[ERROR] Invalid base branch\n");
        exit 1;
    }
}

if (!grep(/^$branch$/, @branches))
{
    print("[ERROR] Invalid target branch\n");
    exit 1;
}

my @diff_behind = split(/\n/,
    `git rev-list --no-merges --left-only --oneline $basebranch...$branch`);
my $count_behind = scalar @diff_behind;

my @diff_ahead = split(/\n/,
    `git rev-list --no-merges --right-only --oneline $basebranch...$branch`);
my $count_ahead  = scalar @diff_ahead;

print("$branch behind\n");
foreach my $row (@diff_behind)
{
    print("    $row\n");
}
print("$count_behind\n");

print("$branch ahead\n");
foreach my $row (@diff_ahead)
{
    print("    $row\n");
}
print("$count_ahead\n");
