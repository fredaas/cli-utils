#!/usr/bin/env python3
#
# SYNTAX
#
#     pcv <src> <src_base> <dst_base>
#
# OPTIONS
#
#     src
#
#         Source value
#
#     src_base
#
#         Source radix base
#
#     dst_base
#
#         Destination radix base
#
# DESCRIPTION
#
#     Converts a value 'src' given a radix base 'src_base' into a value with the
#     radix base 'dst_base'.
#

import argparse

def init_argparse():
    parser = argparse.ArgumentParser()

    parser.add_argument(
        "src",
        type = str,
        nargs = 1
    )

    parser.add_argument(
        "src_base",
        type = int,
        nargs = 1
    )

    parser.add_argument(
        "dst_base",
        type = int,
        nargs = 1
    )

    return vars(parser.parse_args())

def is_valid_base(base):
    return (base == 2) or (base == 10) or (base == 16)

if __name__ == "__main__":
    argv = init_argparse()

    src = argv["src"][0]
    src_base = argv["src_base"][0]
    dst_base = argv["dst_base"][0]

    if not is_valid_base(src_base):
        print("[ERROR] Source base not supported")
        quit(1)
    if not is_valid_base(dst_base):
        print("[ERROR] Destionation base not supported")
        quit(1)

    # Convert 'src' to radix 'dst_base' value
    try:
        if src_base == 2:
            if dst_base == 16:
                print("0x{:x}".format(int(src, src_base)))
            elif dst_base == 10:
                print("{}".format(int(src, src_base)))
        elif src_base == 16:
            if dst_base == 2:
                # Print each hex value separately to allow lhs zero padding
                for hexval in src:
                    print("{:04b}".format(int(hexval, src_base)), end="")
                print()
            elif dst_base == 10:
                print("{}".format(int(src, src_base)))
        elif src_base == 10:
            if dst_base == 2:
                print("{:b}".format(int(src, src_base)))
            elif dst_base == 16:
                print("0x{:x}".format(int(src, src_base)))
    except:
        print(
            "[ERROR] Failed to convert value, please check your arguments "
            "and try again"
        )
