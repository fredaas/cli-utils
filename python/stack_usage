#!/usr/bin/env python3
"""
Usage:
    stack_usage [<dir_path>]

Options:
    <dir_path>
        Directory path to target .su files.
"""
import os
import glob

from docopt import docopt

# Stack usage accross all files
stack_used_total = 0

# Stack usage per file
stack_used_file = []


def parse_su_file(path):
    global stack_used_total

    with open(path, 'r') as fh:
        data = fh.read().strip().splitlines()

    filename = os.path.basename(path).replace('.su', '.c')
    stack_used = 0

    for item in data:
        _, num_bytes, _ = item.split('\t')
        stack_used += int(num_bytes)

    stack_used_total += stack_used
    stack_used_file.append((filename, stack_used))


def print_stack_usage():
    global stack_used_file

    print('Stack usage:')
    print('-' * 80)

    if not stack_used_file:
        print('{:>8}'.format(0))

    for item in sorted(stack_used_file, key=lambda x: x[1], reverse=True):
        filename, stack_used = item
        print('{:>8} [{:4.1f}%] : {}'.format(stack_used, 100 *
              (stack_used / stack_used_total), filename))

    print('Total:')
    print('-' * 80)
    print('{:>8}'.format(stack_used_total))


def main():
    argv = docopt(__doc__, help=True)

    path = ''

    if argv['<dir_path>']:
        path = argv['<dir_path>']

    path = os.path.abspath(os.path.join(path, '*.su'))

    for item in glob.glob(path, recursive=False):
        parse_su_file(item)

    print_stack_usage()


if __name__ == '__main__':
    main()
